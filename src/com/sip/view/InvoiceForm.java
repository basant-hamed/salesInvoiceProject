/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.sip.view;

import com.sip.controller.InvoiceActionListener;
import com.sip.controller.TblSelectListener;
import com.sip.model.InvoiceHeaderTblModel;
import com.sip.model.invoiceHeader;
import com.sip.model.invoiceLine;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JTable;

/**
 *
 * @author BosBos
 */
public class InvoiceForm extends javax.swing.JFrame {

    /**
     * Creates new form invoice_form
     */
    public InvoiceForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        invoice_header_Table = new javax.swing.JTable();
        createInvoiceBtn = new javax.swing.JButton();
        deleteInvoiceBtn = new javax.swing.JButton();
        InvNumber = new javax.swing.JLabel();
        InvDate = new javax.swing.JLabel();
        InvCustNm = new javax.swing.JLabel();
        InvTotal = new javax.swing.JLabel();
        invoiceNo = new javax.swing.JLabel();
        invoiceDate = new javax.swing.JLabel();
        customerName = new javax.swing.JLabel();
        inv_Total = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        invoice_line_table = new javax.swing.JTable();
        createLineBtn = new javax.swing.JButton();
        deleteLineBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        loadMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        invoice_header_Table.getSelectionModel().addListSelectionListener(selectListener);
        invoice_header_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(invoice_header_Table);

        createInvoiceBtn.setText("New Invoice");
        createInvoiceBtn.addActionListener(actionListener);
        createInvoiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createInvoiceBtnActionPerformed(evt);
            }
        });

        deleteInvoiceBtn.setText("Delete Invoice");
        deleteInvoiceBtn.addActionListener(actionListener);

        InvNumber.setText("Invoice No:");

        InvDate.setText("Invoice Date");

        InvCustNm.setText("Customer Name:");

        InvTotal.setText("Invoice Total:");

        invoice_line_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(invoice_line_table);

        createLineBtn.addActionListener(actionListener);
        createLineBtn.setText("New Line");

        deleteLineBtn.setText("Delete Line");
        deleteLineBtn.addActionListener(actionListener);

        jMenu1.setText("File");

        loadMenuItem.setText("Load Files");
        loadMenuItem.addActionListener(actionListener);
        loadMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(loadMenuItem);

        saveMenuItem.setText("Save Files");
        saveMenuItem.addActionListener(new InvoiceActionListener());

        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(saveMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createInvoiceBtn)
                        .addGap(98, 98, 98)
                        .addComponent(deleteInvoiceBtn)
                        .addGap(156, 156, 156)
                        .addComponent(createLineBtn)
                        .addGap(70, 70, 70)
                        .addComponent(deleteLineBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(InvCustNm)
                                            .addComponent(InvTotal))
                                        .addGap(33, 33, 33)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(inv_Total)
                                            .addComponent(customerName)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(InvNumber)
                                            .addComponent(InvDate))
                                        .addGap(58, 58, 58)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(invoiceDate)
                                            .addComponent(invoiceNo))))))))
                .addContainerGap(172, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InvNumber)
                            .addComponent(invoiceNo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InvDate)
                            .addComponent(invoiceDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customerName)
                            .addComponent(InvCustNm))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(InvTotal)
                            .addComponent(inv_Total, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createLineBtn)
                    .addComponent(deleteLineBtn)
                    .addComponent(createInvoiceBtn)
                    .addComponent(deleteInvoiceBtn))
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void createInvoiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createInvoiceBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createInvoiceBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InvoiceForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel InvCustNm;
    private javax.swing.JLabel InvDate;
    private javax.swing.JLabel InvNumber;
    private javax.swing.JLabel InvTotal;
    private javax.swing.JButton createInvoiceBtn;
    private javax.swing.JButton createLineBtn;
    private javax.swing.JLabel customerName;
    private javax.swing.JButton deleteInvoiceBtn;
    private javax.swing.JButton deleteLineBtn;
    private javax.swing.JLabel inv_Total;
    private javax.swing.JLabel invoiceDate;
    private javax.swing.JLabel invoiceNo;
    private javax.swing.JTable invoice_header_Table;
    private javax.swing.JTable invoice_line_table;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem loadMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables
private InvoiceActionListener actionListener= new InvoiceActionListener(this); 
private ArrayList<invoiceHeader> invoicesArray;
private ArrayList<invoiceLine> linesArray;
private InvoiceHeaderTblModel headerTblModel;
public static SimpleDateFormat DateFormate = new SimpleDateFormat("dd-MM-yyyy");
private TblSelectListener selectListener = new TblSelectListener(this);









    public ArrayList<invoiceLine> getLinesArray() {
        return linesArray;
    }

    public void setLinesArray(ArrayList<invoiceLine> linesArray) {
        this.linesArray = linesArray;
    }

HeaderDialog headerDialog = new HeaderDialog(this);
    public InvoiceActionListener getActionlistener() {
        return actionListener;
    }

    public void setActionlistener(InvoiceActionListener actionlistener) {
        this.actionListener = actionlistener;
    }




    public void setInvoicesArray(ArrayList<invoiceHeader> invoicesArray) {
        this.invoicesArray = invoicesArray;
    }

    public ArrayList<invoiceHeader> getInvoicesArray() {
        return invoicesArray;
    }

    
public invoiceHeader getInvObject(int code){
  for (invoiceHeader inv : invoicesArray){
      if (inv.getNum() == code ) { return inv;}
 }
  
return null;
}

    public InvoiceHeaderTblModel getHeaderTblModel() {
        return headerTblModel;
    }

    public void setHeaderTblModel(InvoiceHeaderTblModel headerTblModel) {
        this.headerTblModel = headerTblModel;
    }

    public JTable getInvoice_header_Table() {
        return invoice_header_Table;
    }

    public JTable getInvoice_line_table() {
        return invoice_line_table;
    }

    public JLabel getCustomerName() {
        return customerName;
    }

    public JLabel getInvoiceDate() {
        return invoiceDate;
    }

    public JLabel getInvoiceNo() {
        return invoiceNo;
    }

    public JLabel getInvoiceTotal() {
        return inv_Total;
    }

    public InvoiceActionListener getActionListener() {
        return actionListener;
    }

    public void setInvoice_header_Table(JTable invoice_header_Table) {
        this.invoice_header_Table = invoice_header_Table;
    }

    public void setInvoice_line_table(JTable invoice_line_table) {
        this.invoice_line_table = invoice_line_table;
    }

}